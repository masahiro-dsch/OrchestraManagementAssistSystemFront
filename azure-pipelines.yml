# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '16.x'
        displayName: 'Install Node.js 16.x'

      - task: Cache@2
        inputs:
          key: $(System.DefaultWorkingDirectory)/package-lock.json
          path: $(npm_config_cache)
        displayName: 'cache npm library files'

#      - script: |
#          cd AngularWithAzure/
#          npm install -g @angular/cli
#          npm install
#          ng build --prod
      - script: |
          npm install -g @angular/cli
          npm install
          ng build --configuration production
        displayName: 'npm install and build'
        workingDirectory: '$(Build.SourcesDirectory)'

#      - task: CmdLine@2
#        displayName: "Run unit tests"
#        inputs:
#          script: |
#            cd AngularWithAzure/
#            ng test --browsers=ChromeHeadless --code-coverage --watch=false
      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
#          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/angular-with-azure/'
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          ArtifactName: 'drop'
          publishLocation: 'Container'

- stage: Development
  displayName: 'Deploy to Development'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentDevelopment
    pool:
      vmImage: 'ubuntu-latest'
    environment: Development
    strategy:
      runOnce:
        deploy:
          steps:

          - task: AzureWebApp@1
            displayName: 'Deploy App Service dev'
            inputs:
              azureSubscription: '従量課金(94ce718f-b88a-4044-b4bd-f78033a7ba6f)'
              appType: 'webAppLinux'
              appName: 'ADMC-Frontend'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              runtimeStack: 'NODE|16-lts'